sudo apt update
sudo apt upgrade -y
sudo apt install vim -y
sudo apt install python3 -y

# Установка Docker
sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
sudo apt install docker docker-compose -y

# Запуск Jupyter notebook на порт 8888
sudo docker run -p 8888:8888 jupyter/base-notebook
sudo docker exec -it $container sh # вход внутрь контейнера и внутри jupyter notebook list, чтобы посмотреть token

# Не обязательно. Способ создать VENV с другой версией python не меняя системный
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash Miniconda3-latest-Linux-x86_64.sh -y
conda create -y -n conda123 python=3.6.9 # создает conda venv с версией python 3.6.9
conda activate conda123 # вход в conda venv с именем conda123
conda deactivate # выход из окружения

# Установка Airflow (желательно в venv)
pip install apache-airflow==2.0.0
sudo apt install gcc -y # Не обязательно
sudo apt install libpq-dev -y # не обязательно
pip install SQLAlchemy==1.3.23 # обязательно
pip install psycopg2==2.8.6
airflow db init # инициализация бд airflow (повторить после изменений в config.cfg)

# Установка Postgres (желательно в качестве базы для airflow)
sudo apt install postgresql -y
sudo -u postgres psql # вход в базу под суперпользователем postgres

# In Postgres console
CREATE database airflow_metadata;
CREATE user airflow WITH password 'airflow';
GRANT all privileges on database airflow_metadata to airflow;

# Создание администраторской записи в airflow
airflow users create --username admin --password admin --firstname vladimir --lastname alexandrov --role Admin --email nemuritori@yandex.ru

airflow webserver -D -p 8080 # запуск веб сервера в фоне (daemon -D)
airflow scheduler -D # запуск scheduler в фоне (daemon -D)
